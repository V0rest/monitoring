version: '3.8'
services:
#########NodeExporter##########################################################
  nodeexporter:
    image: prom/node-exporter:v${NODE_EXPORTER_VERSION}
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - prometheus
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

###########Cadvisor############################################################
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v${CADVISOR_VERSION}
    container_name: cadvisor
    ports:
      - "8080:8080"
    networks:
      - prometheus
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /sys/fs/cgroup:/cgroup:ro
      - /dev/disk/:/dev/disk:ro
    command:
      - '--housekeeping_interval=10s'
      - '--docker_only=true'
    restart: unless-stopped

##########Prometheus###########################################################
  prometheus:
    image: prom/prometheus:v${PROMETHEUS_VERSION}
    container_name: prometheus
    user: "${UID}:${GID}"
    ports:
      - "9090:9090"
    networks:
      - prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

###########Grafana##############################################################
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    user: "${UID}:${GID}"
    ports:
      - "3000:3000"
    networks:
      - prometheus
    depends_on:
      - "prometheus"
    volumes:
#      - ./grafana/config.ini:/etc/grafana/grafana.ini
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped

##########Cloudwatch Exporter###################################################
#  prometheus-cloudwatch-exporter:
#    image: prom/cloudwatch-exporter
#    container_name: prometheus-cloudwatch-exporter
#    ports:
#      - "9106:9106"
#    networks:
#      - prometheus
#    volumes:
#      - ./prometheus-cloudwatch-exporter.yml:/config/config.yml
#    environment:
#      - AWS_ACCESS_KEY_ID=
#      - AWS_SECRET_ACCESS_KEY=

#########Alert Manager##########################################################
  alertmanager:
    image:  prom/alertmanager:v${ALERTMANAGER_VERSION}
    container_name: alertmanager
    ports:
      - "9093:9093"
    networks:
      - prometheus
    volumes:
      - ./alertmanager.yml:/config/alertmanager.yml
    command:
      - '--config.file=/config/alertmanager.yml'
    restart: unless-stopped

##########SNMP-Exporter#########################################################
  snmp:
    image: prom/snmp-exporter:v${SNMP_EXPORTER_VERSION}
    container_name: snmp_exporter
    ports:
      - "9116:9116"
#      - 161:161
    networks:
      - prometheus
    volumes:
      - ./prometheus/snmp:/etc/snmp_exporter
    command:
      - '--config.file=/etc/snmp_exporter/snmp.yml'
    restart: unless-stopped

##########Blackbox-Exporter#########################################################
  blackbox_exporter:
    image: prom/blackbox-exporter:v${BLACKBOX_EXPORTER_VERSION}
    container_name: blackbox
    ports:
      - "9115:9115"
    networks:
      - prometheus
    dns: 8.8.8.8
    volumes:
      - ./prometheus/blackbox:/etc/blackbox
    command:
      - '--config.file=/etc/blackbox/blackbox.yml'
    restart: unless-stopped

#volumes:
#  grafana_data: {}
#  prometheus_data: {}
networks:
  prometheus:
    driver: bridge
